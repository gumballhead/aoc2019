#!/usr/bin/env bash
set -e
day=$1

rollback() {
  if [ $? -eq 0 ]; then
    git add "$day"
    echo "Successfully generated $day solution."
  else
    rm -rf $day
    echo "Error generating $day solution."
  fi
}

create_script() {
  path=$1
  body=$2

  echo "#!/usr/bin/env bash" > "$path"
  echo "$body" >> "$path"
  chmod +x "$path"
}

if [[ ! $1 =~ ^day[0-2]?[0-9]$ ]]; then
    echo "Enter a day to initialize. usage: bin/init day4"
    exit
fi

mkdir "$day"
trap rollback EXIT

echo "PATH=./bin:$PATH" > "$day/.envrc"

curl -s --fail "https://adventofcode.com/2019/day/${day: -1}" \
| sed -n "/<article/,/<\/article>/p" \
> "$day-instructions.html"

curl -s --fail "http://c.docverter.com/convert" \
--form from=html \
--form to=markdown \
--form "input_files[]=@$day-instructions.html" \
> "$day/README.md"

rm -f "$day-instructions.html"

if [ -n "$AOC_SESSION_TOKEN" ]; then
    curl -s "https://adventofcode.com/2019/day/${day: -1}/input" -H "Cookie: session=$AOC_SESSION_TOKEN" > "$day/input"
else
    echo "AOC_SESSION_TOKEN not set. Skipping puzzle input."
fi

src=$day/$day
mkdir "$src"
touch "$src/__init__.py"
touch "$src/tests.py"

mkdir "$src/part1"
touch "$src/part1/__main__.py"

mkdir "$src/part2"
touch "$src/part2/__main__.py"

bin=$day/bin
mkdir "$bin"
create_script "$bin/part1" "pipenv run python3 -m $day.part1"
create_script "$bin/part2" "pipenv run python3 -m $day.part1"
create_script "$bin/tests" "pipenv run nosetests $day --with-coverage --cover-branches --cover-package=$day"
