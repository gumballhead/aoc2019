#!/usr/bin/env bash
set -e

finish() {
    if [ $? -eq 0 ]; then
        git add "$day"
        echo "Successfully generated $day solution."
    else
        rm -rf "$day"
        echo "Error generating $day solution."
    fi
}

create_script() {
    path=$1
    body=$2

    echo "#!/usr/bin/env bash" > "$path"
    echo "$body" >> "$path"
    chmod +x "$path"
}

if [[ $1 =~ ^day([[:digit:]]{1,2})$ && "${BASH_REMATCH[1]}" -gt 0 && "${BASH_REMATCH[1]}" -le 25 ]]; then
    date="${BASH_REMATCH[1]}"
else
    echo "Enter a day between 1 and 25 to initialize."
    echo "usage: bin/init day1"
    exit
fi

day="day$date"
mkdir "$day"
trap finish EXIT

echo "export PATH=./bin:$PATH" > "$day/.envrc"
bin/instructions "$day" > "$day/README.md"

if [[ -n $AOC_SESSION_TOKEN ]]; then
    curl -s "https://adventofcode.com/2019/day/$date/input" -H "Cookie: session=$AOC_SESSION_TOKEN" > "$day/input"
else
    echo "AOC_SESSION_TOKEN not set. Skipping puzzle input."
fi

src=$day/$day
mkdir "$src"
touch "$src/__init__.py"
touch "$src/tests.py"

mkdir "$src/part1"
touch "$src/part1/__init__.py"
touch "$src/part1/__main__.py"

mkdir "$src/part2"
touch "$src/part2/__init__.py"
touch "$src/part2/__main__.py"

bin=$day/bin
mkdir "$bin"
create_script "$bin/part1" "pipenv run python3 -m $day.part1"
create_script "$bin/part2" "pipenv run python3 -m $day.part2"
